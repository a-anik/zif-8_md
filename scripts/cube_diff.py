#!/usr/bin/env python

import numpy as np
import sys


def read_cube(f):
    header = [f.readline() for i in range(6)]
    nA = int(header[2].split()[0])
    nx = int(header[3].split()[0])
    ny = int(header[4].split()[0])
    nz = int(header[5].split()[0])
    structure = [f.readline() for i in range(nA)]
    voxels = np.fromfile(f, sep=' ').reshape(nx,ny,nz)

    return (header + structure, voxels)


def write_cube(header, voxels):
    for line in header:
        sys.stdout.write(line)
    nx, ny, nz = voxels.shape
    np.savetxt(sys.stdout, voxels.reshape((nx*ny, nz)), fmt='%12.6f')


if __name__ == '__main__':
    """Prints difference of two cube files generated by gmx spatial.
       Usage:  cube_diff.py data1.cube data2.cube
       Output: (data2-data1).cube"""

    with open(sys.argv[1]) as f:
        header1, voxels1 = read_cube(f)

    with open(sys.argv[2]) as f:
        header2, voxels2 = read_cube(f)

    # require identical headers
    for i in range(2,6):
        if header1[i] != header2[i]:
            raise ValueError("Different dimensions in cube files")

    write_cube(header1, voxels2-voxels1)
